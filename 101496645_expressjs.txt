What is express JS?

Express.js, often referred to simply as Express, is a minimal and flexible back-end web application framework for Node.js. 
It is designed for building web applications and APIs, and is widely considered the de facto standard server framework for 
Node.js.

How Express.js works:
Express.js simplifies the core functionality of Node.js to manage the flow of data between a server and client. 
It works with a client-server model, handling HTTP requests and responses through the following process: 

    Request received: A web browser or mobile app sends an HTTP request (e.g., GET or POST) to the server.

    Route matching: The Express app receives the request and, based on the URL and HTTP method, directs it to the correct handler.

    Middleware execution: The request may pass through one or more middleware functions. These functions can handle tasks such 
    as authentication, logging, or parsing the request data.

    Response sent: After the middleware stack is finished, the application sends a response back to the client. This can be 
    JSON data, a rendered HTML page, or a redirect. 

Key features:

Routing: Express has a robust routing system that defines how an application responds to client requests to specific 
endpoints and HTTP methods.

Middleware: The framework's core relies on middleware functions, which are executed in a pipeline during the request-response 
cycle to perform tasks.

Performance: Built on the fast Node.js runtime, Express provides a lightweight layer of features that make it easy to build 
high-performance applications.

Flexibility: Unlike more "opinionated" frameworks, Express does not enforce a strict application structure. Developers have the 
freedom to organize their code and use the tools they prefer.

RESTful API support: Express is especially well-suited for building RESTful APIs, allowing developers to handle different HTTP 
verbs (GET, POST, PUT, DELETE) with a clean syntax.
